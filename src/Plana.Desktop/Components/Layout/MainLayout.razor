@inherits LayoutComponentBase
@inject IJSRuntime JsRuntime

<div class="grid min-h-screen grid-cols-1 grid-rows-[auto_1fr_auto] bg-neutral-800 text-neutral-300 select-none">
  <header class="absolute top-0 z-10 h-16 w-full border-b border-neutral-400 dark:border-neutral-600 bg-neutral-50 dark:bg-neutral-950">
    <div class="flex h-full items-center justify-between mx-4">
      <div class="text-2xl font-bold">
        Plana for Desktop
      </div>
      <div class="flex flex-row gap-x-4">
        <div>
          <NavLink href="" Match="NavLinkMatch.All" class="block pb-1" ActiveClass="border-b-2 border-sky-500">
            Home
          </NavLink>
        </div>
        <div>
          <NavLink href="settings" class="block pb-1" ActiveClass="border-b-2 border-sky-500">
            Settings
          </NavLink>
        </div>
        <div>
          <NavLink href="about" class="block pb-1" ActiveClass="border-b-2 border-sky-500">
            About
          </NavLink>
        </div>
      </div>
    </div>
  </header>

  <main class="py-2 h-[calc(100vh-64px-32px)] mt-16 overflow-y-auto">
    @Body
  </main>

  <footer class="absolute bottom-0 z-10 h-8 w-full border-t border-neutral-400 dark:border-neutral-600 bg-neutral-800 py-1 px-4">
    <div class="text-sm text-neutral-400">
      Plana Desktop: 1.0.0-alpha.8 / Plana: 1.0.0-alpha.8 / Branch: alona-desktop
    </div>
  </footer>
</div>


<script>
  window.onApplicationInitialize = ({ configuration, ...rest }) => {
    if (configuration === "DEBUG") {
      const head = document.head;
      const { content } = rest;

      const script = document.createElement("script");
      script.src = "https://cdn.tailwindcss.com";
      script.onload = () => {
        // workaround for TailwindCSS CDN execution
        head.appendChild(document.createElement("script"));
      };

      head.appendChild(script);

      const config = document.createElement("script");
      config.innerHTML = `const tailwind = window.tailwind || {};${content}`;
      head.appendChild(config);
    }
  }
</script>

@code
{
  protected override async Task OnInitializedAsync()
  {
#if DEBUG
    var path = new StreamReader(await FileSystem.Current.OpenAppPackageFileAsync("tailwind.config.js"));
    var content = await path.ReadToEndAsync();
    await JsRuntime.InvokeVoidAsync("onApplicationInitialize", new { configuration = "DEBUG", content = content.Replace("module.exports", "tailwind.config") });
#endif
  }
}